---

- name: install dependencies
  become: yes
  package:
    name:
      - git
      - zsh
    state: present

- name: clone oh-my-zsh for users
  become: yes
  become_user: '{{ item.username }}'
  git:
    repo: 'https://github.com/robbyrussell/oh-my-zsh.git'
    version: master
    dest: '~/.oh-my-zsh'
  with_items: '{{ users }}'
  when: users is defined

- name: clone powerlevel10k for users
  become: yes
  become_user: '{{ item.username }}'
  git:
    repo: 'https://github.com/romkatv/powerlevel10k.git'
    version: master
    dest: '~/.oh-my-zsh/custom/themes/powerlevel10k'
  with_items: '{{ users }}'
  when: users is defined

- name: clone zsh-autosuggestions for users
  become: yes
  become_user: '{{ item.username }}'
  git:
    repo: 'https://github.com/zsh-users/zsh-autosuggestions.git'
    version: master
    dest: '~/.oh-my-zsh/custom/plugins/zsh-autosuggestions'
  with_items: '{{ users }}'
  when: users is defined

- name: clone zsh-syntax-highlighting for users
  become: yes
  become_user: '{{ item.username }}'
  git:
    repo: 'https://github.com/zsh-users/zsh-syntax-highlighting.git'
    version: master
    dest: '~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting'
  with_items: '{{ users }}'
  when: users is defined

- name: get user info
  user:
    name: '{{ item.username }}'
    state: present
  register: 'userinfo'
  with_items: '{{ users }}'
  when: users is defined

- name: write .zshrc for users
  become: yes
  template:
    src: "{{ zshrc_src_template }}"
    dest: '{{ item.home }}/.zshrc'
    backup: yes
    mode: 'u=rw,go=r'
    group: '{{ item.group }}'
    owner: '{{ item.uid }}'
  with_items: '{{ userinfo.results }}'
  when: userinfo is defined

- name: write .p10k.zsh for users
  become: yes
  copy:
    src: "{{ p10k_src_file }}"
    dest: '{{ item.home }}/.p10k.zsh'
    backup: yes
    mode: 'u=rw,go=r'
    group: '{{ item.group }}'
    owner: '{{ item.uid }}'
  with_items: '{{ userinfo.results }}'
  when: userinfo is defined

- name: set default shell for users
  become: yes
  user:
    name: '{{ item.username }}'
    shell: /bin/zsh
  register: chsh_result
  ignore_errors: true
  with_items: '{{ users }}'
  when: users is defined

- debug:
    msg: 'userinfo: {{ userinfo.results }}'
  when: userinfo is defined and chsh_result.failed

- name: fallback - set default shell (add to ~/.bashrc)
  blockinfile:
    path: '{{ item.home }}/.bashrc'
    content: zsh
  with_items: '{{ userinfo.results }}'
  when: userinfo is defined and chsh_result.failed
